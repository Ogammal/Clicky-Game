{"version":3,"sources":["components/img/stark.jpg","components/img/lannister.jpg","components/img/arryn.jpg","components/img/targaryen.jpg","components/img/greyjoy.jpg","components/img/baratheon.jpg","components/img/martell.jpg","components/img/tully.jpg","components/img/tyrell.jpg","components/img/mormont.jpg","components/img/hornwood.jpg","components/img/frey.jpg","components/Nav.js","components/Header.js","components/Main.js","components/Footer.js","components/Img.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Nav","props","react_default","a","createElement","className","href","message","correct","topscore","Header","Main","children","Footer","Img","src","alt","name","onClick","pickImg","App","state","picked","shuffleArray","array","imgArray","i","length","j","Math","floor","random","_ref","_this","indexOf","setState","concat","imgSwitch","stark","lannister","arryn","targaryen","greyjoy","baratheon","martell","tully","tyrell","mormont","hornwood","frey","_this2","this","components_Nav","components_Header","components_Main","map","image","components_Img","key","components_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca39c4a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stark.860e68d4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lannister.0af161f5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/arryn.7a314a1d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/targaryen.46a32fce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/greyjoy.2bc5510c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/baratheon.3808e3c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/martell.f05b02d4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tully.3a27047d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tyrell.8a77f7c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mormont.a33bc369.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hornwood.24ef22e2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/frey.a67ef496.jpg\";","import React from \"react\"\n// import Score from \"./score.js\"\n\nfunction Nav(props) {\n    return(\n        <nav className = \"navbar\">\n            \n            <span className = \"brand\">\n                <a href=\"*\">Clicky Game</a>\n            </span>\n            <span className= \"message\">\n                {props.message}\n            </span>\n            <span>\n                Score: {props.correct} | Top Score: {props.topscore} \n\n            </span>\n\n            \n        </nav>\n    )\n}\n\nexport default Nav","import React from \"react\"\n\nfunction Header() {\n    return(\n        <header className= \"header\">\n            <h1>\n                Game of Thrones Clicky Game!\n            </h1>\n            <h2>\n                Click on an image to earn points, but don't click on any more than once!\n            </h2>\n        </header>\n    )\n}\n\nexport default Header","import React from \"react\"\n\nfunction Main(props) {\n    return (\n        <div className=\"container\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default Main","import React from \"react\"\n\nfunction Footer() {\n    return (\n        <footer>\n            <div className=\"bottom\">\n                Flea Bottom\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer","import React from \"react\"\n\nfunction Img(props) {\n    return (\n        <img \n            src={props.src} \n            alt={props.name} \n            className=\"img-thumbnail clickable-images\" \n            onClick={() => props.pickImg(props.name)} \n        />\n    )\n}\n\nexport default Img","import React, { Component } from 'react';\nimport './App.css';\nimport Nav from \"./components/Nav.js\"\nimport Header from \"./components/Header.js\"\nimport Main from \"./components/Main\"\nimport Footer from \"./components/Footer\"\nimport Img from \"./components/img.json\"\nimport Image from \"./components/Img\"\n\nimport stark from \"./components/img/stark.jpg\"\nimport lannister from \"./components/img/lannister.jpg\"\nimport arryn from \"./components/img/arryn.jpg\"\nimport targaryen from \"./components/img/targaryen.jpg\"\nimport greyjoy from \"./components/img/greyjoy.jpg\"\nimport baratheon from \"./components/img/baratheon.jpg\"\nimport martell from \"./components/img/martell.jpg\"\nimport tully from \"./components/img/tully.jpg\"\nimport tyrell from \"./components/img/tyrell.jpg\"\nimport mormont from \"./components/img/mormont.jpg\"\nimport hornwood from \"./components/img/hornwood.jpg\"\nimport frey from \"./components/img/frey.jpg\"\n\n\nclass App extends Component {\n\n  state = {\n    picked: [],\n    correct: 0,\n    topscore: 0,\n    message: 'Click an image to begin'\n  }\n\n  //Shuffle Array\n  shuffleArray = (array) => {\n    let imgArray = Img;\n    for (let i = imgArray.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [imgArray[i], imgArray[j]] = [imgArray[j], imgArray[i]];\n    }\n    return imgArray\n  }\n\n  pickImg = (name) => {\n    let picked = this.state.picked;\n    \n    if (picked.indexOf(name) === -1) {\n      this.setState({\n        picked: picked.concat(name),\n        correct: this.state.correct + 1,\n        topscore: this.state.correct + 1 > this.state.topscore ? this.state.correct + 1 : this.state.topscore,\n        message: \"Correct: Good choice!\" \n      })\n      this.shuffleArray();\n    }\n    else {\n      this.setState({\n        message: \"Already Selected, Game Over! Would you like to play again?\",\n        correct: 0,\n        picked: []\n      })\n    }\n  }\n\n  imgSwitch = (name) => {\n    switch (name) {\n      case \"stark\":\n        return `${stark}`\n      case \"lannister\":\n        return `${lannister}`\n      case \"arryn\":\n        return `${arryn}`\n      case \"targaryen\":\n        return `${targaryen}`\n      case \"greyjoy\":\n        return `${greyjoy}`\n      case \"baratheon\":\n        return `${baratheon}`\n      case \"martell\":\n        return `${martell}`\n      case \"tully\":\n        return `${tully}`\n      case \"tyrell\":\n        return `${tyrell}`\n      case \"mormont\":\n        return `${mormont}`\n      case \"hornwood\":\n        return `${hornwood}`\n      case \"frey\":\n        return `${frey}`\n      default:\n        return `${stark}`\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav \n          correct={this.state.correct} \n          topscore={this.state.topscore} \n          message={this.state.message}\n        />\n        <Header />\n        <Main>\n          {this.shuffleArray(Img).map(image => (\n            <Image \n              src={this.imgSwitch(image.name)} \n              name={image.name} key={image.name} \n              pickImg={this.pickImg}  \n            />\n          ))}\n        </Main>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}